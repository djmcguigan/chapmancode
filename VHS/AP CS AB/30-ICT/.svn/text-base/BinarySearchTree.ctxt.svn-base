#BlueJ class context
comment0.target=BinarySearchTree()
comment1.params=target
comment1.target=Object\ find(Comparable)
comment1.text=public\ TreeNode\ find(TreeNode\ root,\ Comparable\ valueToFind){\nTreeNode\ node\ \=\ root;\n\nwhile(node\ \!\=\ null){\nint\ result\ \=\ valueToFind.compareTo(node.getValue());\nif(result\ \=\=\ 0)\nreturn\ node;\nelse\ if(result\ <\ 0)\nnode\ \=\ node.getLeft();\nelse\nnode\ \=\ node.getRight();\n}\nreturn\ null;\n}\n
comment10.target=void\ print()
comment11.params=root
comment11.target=void\ printInOrder(TreeNode)
comment12.target=void\ preOrder()
comment13.params=root
comment13.target=void\ printPreOrder(TreeNode)
comment14.target=void\ postOrder()
comment15.params=root
comment15.target=void\ printPostOrder(TreeNode)
comment16.target=int\ countLeaves()
comment17.params=root
comment17.target=int\ countLeavesHelper(TreeNode)
comment18.target=int\ height()
comment19.params=root
comment19.target=int\ heightHelper(TreeNode)
comment2.params=root\ target
comment2.target=Object\ findHelper(TreeNode,\ Comparable)
comment20.target=int\ width()
comment21.params=root
comment21.target=int\ widthHelper(TreeNode)
comment22.target=void\ clearTree()
comment23.target=void\ interchange()
comment24.params=root
comment24.target=void\ interchangeHelper(TreeNode)
comment25.params=level
comment25.target=void\ printLevel(int)
comment26.params=root\ level
comment26.target=void\ printLevelHelper(TreeNode,\ int)
comment27.params=ancestor\ descendant
comment27.target=boolean\ isAncestor(Comparable,\ Comparable)
comment28.params=root\ a\ d
comment28.target=boolean\ isAncestor(TreeNode,\ Comparable,\ Comparable)
comment29.params=root\ target
comment29.target=TreeNode\ findPtr(TreeNode,\ Comparable)
comment3.params=next
comment3.target=void\ insert(Comparable)
comment4.params=root\ next
comment4.target=TreeNode\ insertHelper(TreeNode,\ Comparable)
comment5.params=target
comment5.target=void\ delete(Comparable)
comment6.params=node\ target
comment6.target=TreeNode\ deleteHelper(TreeNode,\ Comparable)
comment7.params=target
comment7.target=TreeNode\ deleteTargetNode(TreeNode)
comment8.target=int\ countNodes()
comment9.params=root
comment9.target=int\ countNodesHelper(TreeNode)
numComments=30
